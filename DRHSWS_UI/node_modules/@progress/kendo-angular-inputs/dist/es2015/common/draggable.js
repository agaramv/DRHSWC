import { EventEmitter, ElementRef, Directive, Output } from '@angular/core';
import { isDocumentAvailable } from './dom-utils';
import Draggable from '@telerik/kendo-draggable';
/**
 * @hidden
 */
export class KendoDraggableDirective {
    constructor(ngEl) {
        this.kendoDrag = new EventEmitter();
        this.kendoPress = new EventEmitter();
        this.kendoRelease = new EventEmitter();
        if (!isDocumentAvailable()) {
            return;
        }
        this.draggable = new Draggable({
            drag: (e) => {
                if (e.hasOwnProperty("originalEvent")) {
                    e.originalEvent.preventDefault();
                }
                this.kendoDrag.next(e);
            },
            press: (e) => this.kendoPress.next(e),
            release: (e) => this.kendoRelease.next(e)
        });
        this.draggable.bindTo(ngEl.nativeElement);
    }
    ngOnDestroy() {
        if (this.draggable) {
            this.draggable.destroy();
        }
    }
}
KendoDraggableDirective.decorators = [
    { type: Directive, args: [{
                selector: '[kendoDraggable]'
            },] },
];
/** @nocollapse */
KendoDraggableDirective.ctorParameters = () => [
    { type: ElementRef, },
];
KendoDraggableDirective.propDecorators = {
    'kendoDrag': [{ type: Output },],
    'kendoPress': [{ type: Output },],
    'kendoRelease': [{ type: Output },],
};

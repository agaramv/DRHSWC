import { Component, Input, HostBinding } from '@angular/core';
import { FilterService } from '../filter.service';
import { isPresent, isNullOrEmptyString } from '../../utils';
import { FilterInputWrapperComponent } from "../filter-input-wrapper.component";
/**
 * @hidden
 */
export class FilterCellWrapperComponent extends FilterInputWrapperComponent {
    constructor(filterService) {
        super(filterService);
        this.showOperators = true;
    }
    get hostClasses() {
        return true;
    }
    get overrideBaseClasses() {
        return false;
    }
    get showButton() {
        const filter = this.currentFilter;
        return isPresent(filter) && !isNullOrEmptyString(filter.value);
    }
    filterChange(filter) {
        this.applyFilter(filter);
    }
}
FilterCellWrapperComponent.decorators = [
    { type: Component, args: [{
                selector: 'kendo-grid-filter-wrapper-cell',
                template: `
        <ng-content></ng-content>
        <kendo-grid-filter-cell-operators
            [showOperators]="showOperators"
            [operators]="operators"
            (clear)="onClear()"
            [showButton]="showButton"
            [(value)]="currentOperator">
        </kendo-grid-filter-cell-operators>
    `
            },] },
];
/** @nocollapse */
FilterCellWrapperComponent.ctorParameters = () => [
    { type: FilterService, },
];
FilterCellWrapperComponent.propDecorators = {
    'hostClasses': [{ type: HostBinding, args: ['class.k-filtercell-wrapper',] },],
    'overrideBaseClasses': [{ type: HostBinding, args: ['class.k-filtercell',] },],
    'showOperators': [{ type: Input },],
};
